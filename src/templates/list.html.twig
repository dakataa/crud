{% extends [getParameter('layout')|default(''), '@DakataaCrud/layout/default.html.twig'] %}

{% block title %}{{ (title ?? 'List')|trans }}{% endblock %}
{% set hasFilters = filterForm.vars.data|length %}
{% block body %}
    <div class="list">
        <div class="content-header d-md-flex mb-3 justify-content-between align-items-center">
            {% block list_title %}
                {% apply spaceless %}
                    <h2>
                        {{ block('title') }}
                    </h2>
                {% endapply %}
            {% endblock %}
            <div class="btn-group btn-group-sm">
                {% block actions %}
                    <a href="{{ generatePath('add') }}" class="btn btn-success">
                        <i class="fas fa-plus"></i> {{ 'Add'|trans }}
                    </a>
                {% endblock %}
                {% if filterForm %}
                    <div class="btn-group btn-group-sm">
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle"
                                data-bs-toggle="dropdown">
                            {{ 'Filter'|trans }} <span class="caret"></span>
                        </button>

                        <div class="dropdown-menu dropdown-menu-right" aria-label="menu">
                            <div class="filter">
                                {{ form_start(filterForm, { attr: {'novalidate': 'novalidate'}}) }}
                                {{ form_rest(filterForm) }}
                                <div class="mb-3 btn-group-sm">
                                    <button type="submit" class="btn btn-success me-2">{{ 'Search'|trans }}</button>
                                    {% if hasFilters %}
                                        <a class="btn btn-default"
                                           href="{{ generatePath('filter', { _reset: 1 }) }}">{{ 'Reset'|trans }}</a>
                                    {% endif %}
                                </div>
                                {{ form_end(filterForm) }}
                            </div>
                        </div>
                    </div>
                {% endif %}
                {% if hasFilters %}
                    <a href="{{ generatePath('filter', { _reset: 1 }) }}" class="btn btn-outline-dark">x</a>
                {% endif %}
            </div>
        </div>

        {{ form_start(batchForm, { 'attr': {'novalidate': 'novalidate', 'autocomplete':'off'}}) }}

        {% if dataProvider.items|length %}
            {% if hasFilters %}
                <div class="filters d-flex mb-sm overflow-auto">
                    {% macro filterList(filterForm) %}
                        {% for v in filterForm.children|filter(f => f.vars.value is not empty) %}
                            {% if v.children|length %}
                                {{ _self.filterList(v) }}
                            {% else %}
                                <div class="filters-item d-flex text-nowrap flex-column me-2 mb-2">
                                    {% set filterVars = filterForm.vars.data|filter((fv,fk) => fk != v.vars.name) %}
                                    <small class="mb-2">{{ (v.vars.label ?? v.vars.name)|capitalize|trans }}</small>
                                    <div class="btn btn-sm btn-primary me-1 mb-1">
                                        {{ v.vars.choices is defined ? (v.vars.choices|filter(c => c.value == v.vars.value)|first).label ?? v.vars.value : (v.vars.value is iterable ? '' : v.vars.value) }}
                                        <a href="{{ generatePath('filter', { filter: filterVars }) }}"
                                           class="text-white">&times;</a>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    {% endmacro %}
                    {{ _self.filterList(filterForm) }}
                </div>
            {% endif %}
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead>
                    <tr>
                        {% if batchForm.method is defined %}
                            <th width="1%"><input type="checkbox" data-toggle="checkall" data-target=".ids"/></th>
                        {% endif %}
                        {% for column in columns|filter((options, column) => (rolesForClass(column.permission|default('')) is empty or (rolesForClass(column.permission|default('index'))|reduce((a, b) => (a == null or a == true ? is_granted(b) : false), null)) or (is_granted('ROLE_SUPER_ADMIN') == true))) %}
                            {% set columnHeaderBlock = column.alias ~ '_header' %}
                            {% block columnHeaderBlock %}
                                <th>
                                    {{- column.label|trans -}}

                                    {% if column.sortable %}
                                        {% set currentSortType = attribute(sort, column.field)|default(null) %}
                                        {% set newSortType = (currentSortType == 'ASC' ? 'DESC' : 'ASC') %}

                                        <a href="{{ generatePath('list', { sort: (sort|default({}))|merge({(column.field): (newSortType|default(null)) }) }) }}">
                                            {% if (currentSortType) %}
                                                {{ (currentSortType == 'ASC' ? '&uarr;':'&darr;') }}
                                            {% else %}
                                                &udarr;
                                            {% endif %}
                                        </a>
                                    {% endif %}
                                </th>
                            {% endblock %}
                        {% endfor %}
                        <th class="text-end">{{ 'Actions'|trans }}</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% if dataProvider.items|length %}
                        {% for object in dataProvider.items %}
                            <tr id="row_{{ loop.index }}">
                                {% if batchForm.method is defined %}
                                    <td>
                                        <input type="checkbox" class="ids" name="batch[ids][]"
                                               value="{{ object.entity.id }}"/>
                                    </td>
                                {% endif %}
                                {% for column in object.data %}
                                    {% set blockKey = 'column_' ~ column.alias %}
                                    {% set blockKeyValue = 'column_' ~ column.alias ~ '_value' %}
                                    {% if (block(blockKey) is defined) and (block(blockKey) is not empty) %}
                                        {{ block(blockKey)|raw }}
                                    {% else %}
                                        {% block blockKey %}
                                            <td>
                                                {% block blockKeyValue %}
                                                    {{ column.value }}
                                                {% endblock %}
                                            </td>
                                        {% endblock %}
                                    {% endif %}
                                {% endfor %}
                                <td class="text-end">
                                    <a href="{{ generatePath('edit', {id: entityPrimaryKey(object.entity)}) }}"
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-trash"></i>
                                        Edit
                                    </a>
                                    <a onclick="return confirm('Are you sure?')"
                                       href="{{ generatePath('delete', {id: entityPrimaryKey(object.entity)}) }}"
                                       class="btn btn-sm btn-outline-danger">
                                        <i class="fas fa-trash"></i>
                                        Remove
                                    </a>
                                </td>
                            </tr>
                        {% endfor %}
                    {% else %}
                        <tr>
                            <td colspan="{{ columns|length + 1 + (batchForm.method is defined ? 1 : 0) }}">{{ 'Not results found.'|trans }}</td>
                        </tr>
                    {% endif %}
                    </tbody>
                </table>
            </div>
        {% else %}
            {{ 'No found results'|trans }}
        {% endif %}

        <div class="actions d-flex flex-row flex-wrap align-items-center mb-3">
            {% if batchForm.method is defined %}
                <div class="btn-group me-2 mb-2">
                    <div class="input-group flex-nowrap">
                        {{ form_widget(batchForm.method, {attr: {class: 'form-control'}}) }}

                        <button type="submit" class="btn btn-outline-secondary">{{ 'Go'|trans }}</button>
                    </div>
                </div>
            {% endif %}
            <select id="results-limit" class="form-select w-auto mb-2 ms-auto">
                <option value="20">20</option>
                <option value="40">40</option>
                <option value="60">60</option>
                <option value="80">80</option>
                <option value="100">100</option>
            </select>
        </div>

        <div class="d-flex justify-content-center">
            {% include '@DakataaCrud/paginator.html.twig' with { dataProvider: dataProvider, route: getRoute('index')} %}
        </div>

        {{ form_end(batchForm, {'render_rest': false}) }}
    </div>
    <script type="text/javascript">
		let resultsLimit = document.querySelector('#results-limit');
		resultsLimit.value = {{ dataProvider.meta.totalResults }};
		resultsLimit.addEventListener('change', function () {
			let url = new URL(document.location.href);
			url.searchParams.set('limit', resultsLimit.value);
			document.location = url;
		});
    </script>
{% endblock %}
